---
http_interactions:
- request:
    method: get
    uri: https://api.airtable.com/v0/<TEST_AIRTABLE_APP_ID>/FAQs
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Authorization:
      - Bearer <TEST_AIRTABLE_API_KEY>
      User-Agent:
      - Airrecord/1.0.2
      X-Api-Version:
      - 0.1.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      Connection:
      - keep-alive
      Keep-Alive:
      - '30'
  response:
    status:
      code: 200
      message: OK
    headers:
      Access-Control-Allow-Headers:
      - authorization,content-length,content-type,user-agent,x-airtable-application-id,x-airtable-user-agent,x-api-version,x-requested-with
      Access-Control-Allow-Methods:
      - DELETE,GET,OPTIONS,PATCH,POST,PUT
      Access-Control-Allow-Origin:
      - "*"
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Fri, 18 Sep 2020 13:35:45 GMT
      Etag:
      - W/"64a2-JgEP07vBeu9iDHCOaukcBlV/QTQ"
      Server:
      - Tengine
      Set-Cookie:
      - brw=brwymB5KvcXUl4GNg; path=/; expires=Sat, 18 Sep 2021 13:35:45 GMT; domain=.airtable.com;
        samesite=none; secure; httponly
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Vary:
      - Accept-Encoding
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - DENY
      Content-Length:
      - '7341'
      Connection:
      - keep-alive
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 18 Sep 2020 13:35:45 GMT
recorded_with: VCR 5.0.0
